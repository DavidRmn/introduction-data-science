default:
  Validation_Data:
    _objects:
      Target:
        input_path: "data/BikeRentalDaily_test.csv"
        input_delimiter: ";"
        index: "instant"
        label: "cnt"

01_Minimal_Preprocessing:
  Target_Data:
    _objects:
      Target:
        input_path: "data/BikeRentalDaily_train.csv"
        input_delimiter: ";"
        index: "instant"
        label: "cnt"

  01_Preprocessing:
    data_preparation:
      DataPreparation:
        pipeline:
          _NaNDropper:
            - target: ['hum', 'season']
              config:
                axis: 0
                how: "any"
          _FeatureDropper:
            - target: ['casual', 'registered', 'dteday', 'temp']
              config:
                axis: 1
                errors: "ignore"

  02_Evaluation:
    model_optimization:
      ModelOptimization:
        pipeline:
          train_test_split: true
          linear_regression: true
          validate_models: true

02_Season_Preprocessing:
  Target_Data:
    _objects:
      Target:
        input_path: "data/BikeRentalDaily_train.csv"
        input_delimiter: ";"
        index: "instant"
        label: "cnt"

  01_Preprocessing:
    data_preparation:
      DataPreparation:
        pipeline:
          _CustomTransformer:
            - func: target_to_datetime
              module: "idstools._transformer"
              config:
                target: dteday
                format: "%d.%m.%Y"
            - func: impute_season
              module: "idstools._transformer"
              config:
                target: season
                date: dteday
          _NaNDropper:
            - target: ['hum']
              config:
                axis: 0
                how: "any"
          _FeatureDropper:
            - target: ['casual', 'registered', 'temp', 'dteday']
              config:
                axis: 1
                errors: "ignore"

  02_Evaluation:
    model_optimization:
      ModelOptimization:
        pipeline:
          train_test_split: true
          linear_regression: true
          validate_models: true  

03_Hum_Mean_Preprocessing:
  Target_Data:
    _objects:
      Target:
        input_path: "data/BikeRentalDaily_train.csv"
        input_delimiter: ";"
        index: "instant"
        label: "cnt"

  01_Preprocessing:
    data_preparation:
      DataPreparation:
        pipeline:
          _CustomTransformer:
            - func: target_to_datetime
              module: "idstools._transformer"
              config:
                target: dteday
                format: "%d.%m.%Y"
            - func: impute_season
              module: "idstools._transformer"
              config:
                target: season
                date: dteday
          _SimpleImputer:
            - target: ['hum']
              config:
                strategy: "mean"
          _FeatureDropper:
            - target: ['casual', 'registered', 'temp', 'dteday']
              config:
                axis: 1
                errors: "ignore"

  02_Evaluation:
    model_optimization:
      ModelOptimization:
        pipeline:
          train_test_split: true
          linear_regression: true
          validate_models: true

04_Hum_Median_Preprocessing:
  Target_Data:
    _objects:
      Target:
        input_path: "data/BikeRentalDaily_train.csv"
        input_delimiter: ";"
        index: "instant"
        label: "cnt"

  01_Preprocessing:
    data_preparation:
      DataPreparation:
        pipeline:
          _CustomTransformer:
            - func: target_to_datetime
              module: "idstools._transformer"
              config:
                target: dteday
                format: "%d.%m.%Y"
            - func: impute_season
              module: "idstools._transformer"
              config:
                target: season
                date: dteday
          _SimpleImputer:
            - target: ['hum']
              config:
                strategy: "median"
          _FeatureDropper:
            - target: ['casual', 'registered', 'temp', 'dteday']
              config:
                axis: 1
                errors: "ignore"

  02_Evaluation:
    model_optimization:
      ModelOptimization:
        pipeline:
          train_test_split: true
          linear_regression: true
          validate_models: true

05_Windspeed_Preprocessing:
  Target_Data:
    _objects:
      Target:
        input_path: "data/BikeRentalDaily_train.csv"
        input_delimiter: ";"
        index: "instant"
        label: "cnt"

  01_Preprocessing:
    data_preparation:
      DataPreparation:
        pipeline:
          _CustomTransformer:
            - func: target_to_datetime
              module: "idstools._transformer"
              config:
                target: dteday
                format: "%d.%m.%Y"
            - func: impute_season
              module: "idstools._transformer"
              config:
                target: season
                date: dteday
            - func: negative_to_nan
              module: "idstools._transformer"
              config:
                target: windspeed
          _SimpleImputer:
            - target: ['hum', 'windspeed']
              config:
                strategy: "mean"
          _FeatureDropper:
            - target: ['casual', 'registered', 'temp', 'dteday']
              config:
                axis: 1
                errors: "ignore"

  02_Evaluation:
    model_optimization:
      ModelOptimization:
        pipeline:
          train_test_split: true
          linear_regression: true
          validate_models: true

06_Weekday_Preprocessing:
  Target_Data:
    _objects:
      Target:
        input_path: "data/BikeRentalDaily_train.csv"
        input_delimiter: ";"
        index: "instant"
        label: "cnt"

  01_Preprocessing:
    data_preparation:
      DataPreparation:
        pipeline:
          _CustomTransformer:
            - func: target_to_datetime
              module: "idstools._transformer"
              config:
                target: dteday
                format: "%d.%m.%Y"
            - func: impute_season
              module: "idstools._transformer"
              config:
                target: season
                date: dteday
            - func: negative_to_nan
              module: "idstools._transformer"
              config:
                target: windspeed
            - func: process_weekday
              module: "idstools._transformer"
              config:
                target: weekday
                date: dteday
          _SimpleImputer:
            - target: ['hum', 'windspeed']
              config:
                strategy: "mean"
          _FeatureDropper:
            - target: ['casual', 'registered', 'temp', 'dteday']
              config:
                axis: 1
                errors: "ignore"

  02_Evaluation:
    model_optimization:
      ModelOptimization:
        pipeline:
          train_test_split: true
          linear_regression: true
          validate_models: true

07_Cnt_Preprocessing:
  Target_Data:
    _objects:
      Target:
        input_path: "data/BikeRentalDaily_train.csv"
        input_delimiter: ";"
        index: "instant"
        label: "cnt"

  01_Preprocessing:
    data_preparation:
      DataPreparation:
        pipeline:
          _CustomTransformer:
            - func: target_to_datetime
              module: "idstools._transformer"
              config:
                target: dteday
                format: "%d.%m.%Y"
            - func: impute_season
              module: "idstools._transformer"
              config:
                target: season
                date: dteday
            - func: negative_to_nan
              module: "idstools._transformer"
              config:
                target: windspeed
            - func: process_weekday
              module: "idstools._transformer"
              config:
                target: weekday
                date: dteday
            - func: remove_outliers
              module: "idstools._transformer"
              config:
                target: cnt
          _SimpleImputer:
            - target: ['hum', 'windspeed']
              config:
                strategy: "mean"
          _FeatureDropper:
            - target: ['casual', 'registered', 'temp', 'dteday']
              config:
                axis: 1
                errors: "ignore"

  02_Evaluation:
    model_optimization:
      ModelOptimization:
        pipeline:
          train_test_split: true
          linear_regression: true
          validate_models: true

08_Weekday_OneHotEncode_Preprocessing:
  Target_Data:
    _objects:
      Target:
        input_path: "data/BikeRentalDaily_train.csv"
        input_delimiter: ";"
        index: "instant"
        label: "cnt"

  01_Preprocessing:
    data_preparation:
      DataPreparation:
        pipeline:
          _CustomTransformer:
            - func: target_to_datetime
              module: "idstools._transformer"
              config:
                target: dteday
                format: "%d.%m.%Y"
            - func: impute_season
              module: "idstools._transformer"
              config:
                target: season
                date: dteday
            - func: negative_to_nan
              module: "idstools._transformer"
              config:
                target: windspeed
            - func: process_weekday
              module: "idstools._transformer"
              config:
                target: weekday
                date: dteday
            - func: remove_outliers
              module: "idstools._transformer"
              config:
                target: cnt
          _OneHotEncoder:
            - target: weekday
              config:
                prefix: weekday
                dtype: "int"
          _SimpleImputer:
            - target: ['hum', 'windspeed']
              config:
                strategy: "mean"
          _FeatureDropper:
            - target: ['casual', 'registered', 'temp', 'dteday']
              config:
                axis: 1
                errors: "ignore"

  02_Evaluation:
    model_optimization:
      ModelOptimization:
        pipeline:
          train_test_split: true
          linear_regression: true
          validate_models: true

09_Weathersit_OneHotEncode_Preprocessing:
  Target_Data:
    _objects:
      Target:
        input_path: "data/BikeRentalDaily_train.csv"
        input_delimiter: ";"
        index: "instant"
        label: "cnt"

  01_Preprocessing:
    data_preparation:
      DataPreparation:
        pipeline:
          _CustomTransformer:
            - func: target_to_datetime
              module: "idstools._transformer"
              config:
                target: dteday
                format: "%d.%m.%Y"
            - func: impute_season
              module: "idstools._transformer"
              config:
                target: season
                date: dteday
            - func: negative_to_nan
              module: "idstools._transformer"
              config:
                target: windspeed
            - func: process_weekday
              module: "idstools._transformer"
              config:
                target: weekday
                date: dteday
            - func: remove_outliers
              module: "idstools._transformer"
              config:
                target: cnt
          _OneHotEncoder:
            - target: weathersit
              config:
                prefix: weathersit
                dtype: "int"
          _SimpleImputer:
            - target: ['hum', 'windspeed']
              config:
                strategy: "mean"
          _FeatureDropper:
            - target: ['casual', 'registered', 'temp', 'dteday']
              config:
                axis: 1
                errors: "ignore"

  02_Evaluation:
    model_optimization:
      ModelOptimization:
        pipeline:
          train_test_split: true
          linear_regression: true
          validate_models: true

10_Weekday_Weathersit_OneHotEncode_Preprocessing:
  Target_Data:
    _objects:
      Target:
        input_path: "data/BikeRentalDaily_train.csv"
        input_delimiter: ";"
        index: "instant"
        label: "cnt"

  01_Preprocessing:
    data_preparation:
      DataPreparation:
        pipeline:
          _CustomTransformer:
            - func: target_to_datetime
              module: "idstools._transformer"
              config:
                target: dteday
                format: "%d.%m.%Y"
            - func: impute_season
              module: "idstools._transformer"
              config:
                target: season
                date: dteday
            - func: negative_to_nan
              module: "idstools._transformer"
              config:
                target: windspeed
            - func: process_weekday
              module: "idstools._transformer"
              config:
                target: weekday
                date: dteday
            - func: remove_outliers
              module: "idstools._transformer"
              config:
                target: cnt
          _OneHotEncoder:
            - target: weekday
              config:
                prefix: weekday
                dtype: "int"
            - target: weathersit
              config:
                prefix: weathersit
                dtype: "int"
          _SimpleImputer:
            - target: ['hum', 'windspeed']
              config:
                strategy: "mean"
          _FeatureDropper:
            - target: ['casual', 'registered', 'temp', 'dteday']
              config:
                axis: 1
                errors: "ignore"

  02_Evaluation:
    model_optimization:
      ModelOptimization:
        pipeline:
          train_test_split: true
          linear_regression: true
          validate_models: true

11_Mnth_OneHotEncode_Preprocessing:
  Target_Data:
    _objects:
      Target:
        input_path: "data/BikeRentalDaily_train.csv"
        input_delimiter: ";"
        index: "instant"
        label: "cnt"

  01_Preprocessing:
    data_preparation:
      DataPreparation:
        pipeline:
          _CustomTransformer:
            - func: target_to_datetime
              module: "idstools._transformer"
              config:
                target: dteday
                format: "%d.%m.%Y"
            - func: impute_season
              module: "idstools._transformer"
              config:
                target: season
                date: dteday
            - func: negative_to_nan
              module: "idstools._transformer"
              config:
                target: windspeed
            - func: process_weekday
              module: "idstools._transformer"
              config:
                target: weekday
                date: dteday
            - func: remove_outliers
              module: "idstools._transformer"
              config:
                target: cnt
          _OneHotEncoder:
            - target: mnth
              config:
                prefix: mnth
                dtype: "int"
          _SimpleImputer:
            - target: ['hum', 'windspeed']
              config:
                strategy: "mean"
          _FeatureDropper:
            - target: ['casual', 'registered', 'temp', 'dteday']
              config:
                axis: 1
                errors: "ignore"

  02_Evaluation:
    model_optimization:
      ModelOptimization:
        pipeline:
          train_test_split: true
          linear_regression: true
          validate_models: true

12_Mnth_Weekday_OneHotEncode_Preprocessing:
  Target_Data:
    _objects:
      Target:
        input_path: "data/BikeRentalDaily_train.csv"
        input_delimiter: ";"
        index: "instant"
        label: "cnt"

  01_Preprocessing:
    data_preparation:
      DataPreparation:
        pipeline:
          _CustomTransformer:
            - func: target_to_datetime
              module: "idstools._transformer"
              config:
                target: dteday
                format: "%d.%m.%Y"
            - func: impute_season
              module: "idstools._transformer"
              config:
                target: season
                date: dteday
            - func: negative_to_nan
              module: "idstools._transformer"
              config:
                target: windspeed
            - func: process_weekday
              module: "idstools._transformer"
              config:
                target: weekday
                date: dteday
            - func: remove_outliers
              module: "idstools._transformer"
              config:
                target: cnt
          _OneHotEncoder:
            - target: mnth
              config:
                prefix: mnth
                dtype: "int"
            - target: weekday
              config:
                prefix: weekday
                dtype: "int"
          _SimpleImputer:
            - target: ['hum', 'windspeed']
              config:
                strategy: "mean"
          _FeatureDropper:
            - target: ['casual', 'registered', 'temp', 'dteday']
              config:
                axis: 1
                errors: "ignore"

  02_Evaluation:
    model_optimization:
      ModelOptimization:
        pipeline:
          train_test_split: true
          linear_regression: true
          validate_models: true

13_Mnth_Weekday_Weathersit_OneHotEncode_Preprocessing:
  Target_Data:
    _objects:
      Target:
        input_path: "data/BikeRentalDaily_train.csv"
        input_delimiter: ";"
        index: "instant"
        label: "cnt"

  01_Preprocessing:
    data_preparation:
      DataPreparation:
        pipeline:
          _CustomTransformer:
            - func: target_to_datetime
              module: "idstools._transformer"
              config:
                target: dteday
                format: "%d.%m.%Y"
            - func: impute_season
              module: "idstools._transformer"
              config:
                target: season
                date: dteday
            - func: negative_to_nan
              module: "idstools._transformer"
              config:
                target: windspeed
            - func: process_weekday
              module: "idstools._transformer"
              config:
                target: weekday
                date: dteday
            - func: remove_outliers
              module: "idstools._transformer"
              config:
                target: cnt
          _OneHotEncoder:
            - target: mnth
              config:
                prefix: mnth
                dtype: "int"
                drop_first: true
            - target: weekday
              config:
                prefix: weekday
                dtype: "int"
                drop_first: true
            - target: weathersit
              config:
                prefix: weathersit
                dtype: "int"
                drop_first: true
          _SimpleImputer:
            - target: ['hum', 'windspeed']
              config:
                strategy: "mean"
          _FeatureDropper:
            - target: ['casual', 'registered', 'temp', 'dteday', 'workingday']
              config:
                axis: 1
                errors: "ignore"

  02_Evaluation:
    model_optimization:
      ModelOptimization:
        pipeline:
          train_test_split: true
          linear_regression: true
          validate_models: true
  
  03_Explorer:
    data_explorer:
      DataExplorer:
        pipeline:
          descriptive_analysis: true
          correlation_analysis: true
          calculate_correlation: true
          variance_inflation_factor: true

14_Prepare_Validation_Data:
  Target_Data:
    _objects:
      Target:
        input_path: "data/BikeRentalDaily_train.csv"
        input_delimiter: ";"
        index: "instant"
        label: "cnt"

  Validation_Data:
    _objects:
      Validation:
        input_path: "data/BikeRentalDaily_test.csv"
        input_delimiter: ";"
        index: "instant"
        label: "cnt"

  01_Preprocessing:
    data_preparation:
      DataPreparation:
        pipeline:
          _CustomTransformer:
            - func: target_to_datetime
              module: "idstools._transformer"
              config:
                target: dteday
                format: "%d.%m.%Y"
            - func: impute_season
              module: "idstools._transformer"
              config:
                target: season
                date: dteday
            - func: negative_to_nan
              module: "idstools._transformer"
              config:
                target: windspeed
            - func: process_weekday
              module: "idstools._transformer"
              config:
                target: weekday
                date: dteday
            - func: remove_outliers
              module: "idstools._transformer"
              config:
                target: cnt
          _OneHotEncoder:
            - target: mnth
              config:
                prefix: mnth
                dtype: "int"
                drop_first: true
            - target: weekday
              config:
                prefix: weekday
                dtype: "int"
                drop_first: true
            - target: weathersit
              config:
                prefix: weathersit
                dtype: "int"
                drop_first: true
          _SimpleImputer:
            - target: ['hum', 'windspeed']
              config:
                strategy: "mean"
          _FeatureDropper:
            - target: ['casual', 'registered', 'temp', 'dteday', 'workingday']
              config:
                axis: 1
                errors: "ignore"

  02_Evaluation:
    model_optimization:
      ModelOptimization:
        pipeline:
          - model: LazyRegressor
            module: lazypredict.Supervised
            config:
              verbose: 0
              ignore_warnings: true
              custom_metric: "r2"
              random_state: 42
            - train_test_split: true
              data: target
            - validate_models: true
              data: validation_target