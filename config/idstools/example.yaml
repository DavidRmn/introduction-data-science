"""
This is an example configuration file for the idstools package.
"""
default:
"""
On this level you can define different environments.
The 'default' is a mandatory special key that is used to define the default environment.
You can use the 'default' environment e.g. to define the 'TargetData' object used with this configuration.

Each environment must have a unique key.
The key is used to reference the environment in the different steps of the pipeline.
In the results directory, the results of the different environments are stored in a separate directory.

The individual environments could also have their own 'TargetData' object or even multiple of them.
The 'TargetData' object is used to execute all following environemnts and/or steps either until everything has been processed or until a new 'TargetData' object is defined.
"""
  TargetData:
  """
  On this level you can define individual steps of the environment.

  Each step must have a unique key.
  The key is used to reference the step in the different steps of the pipeline.
  In the results directory, the results of the different steps are stored in a separate directory.
  """
    _objects:
    """
    On this level you create a reference to the module and the function that should be executed.
    The module and the function must be importable from the python environment.

    '_objects' references to the idstools._objects module.
    """
      Target:
      """
      This is the name of the object that is used to execute the function.
      """
        """
        This is the key value pair that is used to define the input path for the data.
        """
        input_path:
        
        """
        This is the key value pair that is used to define the delimiter for the input data.
        """
        input_delimiter:

        """
        This is the key value pair that is used to define the output path for the data.
        """
        output_path:

        """
        This is the key value pair that is used to define the label for the data.
        """
        label:

        """
        This is the key value pair that is used to define the index for the data.
        """
        index:

        """
        This is the key value pair that is used to define the features for the data.
        """
        features: []

"""
Now you can either continue to define the next steps of the default environment or you can define a new environment.

e.g. if the data should be preprocessed in a specific way for a specific task, you can define a new environment for this task.

Assume you want to preprocess the data for a regression task, you can define a new environment for this task.
Another environment could be defined for a classification task.

Following the example, we define a new environment for the regression task.
"""

"""Name of the regression environment."""
regression:
  """Fist step of the regression environment."""
  01_Exploration:
    """Name of the module that contains the class and the function that should be executed."""
    data_explorer:
      """Name of the class that should be executed."""
      DataExplorer:
        """Configuration of the pipeline."""
        pipeline:
          """Name of the functions that should be executed."""
          descriptive_analysis: true
          missing_value_analysis: true
          outlier_analysis: true
          distribution_analysis: true
          scatter_analysis: true
          correlation_analysis: true
          calculate_correlation: true

  """Second step of the regression environment."""
  02_Transform_dteday_to_datetime:
    """Name of the module that contains the class and the function that should be executed."""
    data_preparation:
      """Name of the class that should be executed."""
      DataPreparation:
        """Configuration of the pipeline."""
        pipeline:
          """
          Name of the functions that should be executed.
          
          The '_CustomTransformer' is a special key that is used to execute a custom transformer.
          The 'func' key is used to define the name of the function that should be executed.
          The 'module' key is used to define the name of the module that contains the function.
          The 'config' key is used to define the configuration of the function.

          The 'target' key is used to define the target column that should be transformed.
          The 'format' key is used to define the format of the target column.

          The 'target_to_datetime' function is a custom transformer that is used to transform a target column to a datetime column.
          You can find the implementation of the function in the idstools._transformer module.
          You can add your own custom transformers to the idstools._transformer module.
          """
          _CustomTransformer:
            - func: target_to_datetime
              module: idstools._transformer
              config:
                target: dteday
                format: "%d.%m.%Y"
  
  """Third step of the regression environment."""
  03_Time_Series_Analysis:
    """Name of the module that contains the class and the function that should be executed."""
    data_explorer:
      """Name of the class that should be executed."""
      DataExplorer:
        """Configuration of the pipeline."""
        pipeline:
          """
          Name of the functions that should be executed.
          
          Now that the target column has been transformed to a datetime column, we can execute the time series analysis.

          The 'time_series_analysis' function is used to execute the time series analysis.
          """
          time_series_analysis: true

  """Fourth step of the regression environment."""
  04_Baseline_Regression_Preprocessing:
    """Name of the module that contains the class and the function that should be executed."""
    data_preparation:
      """Name of the class that should be executed."""
      DataPreparation:
        """Configuration of the pipeline."""
        pipeline:
          """
          Name of the functions that should be executed.
          
          The '_SimpleImputer' is a special key that is used to execute a simple imputer.
          The 'target' key is used to define the target column that should be imputed.
          The 'config' key is used to define the configuration of the imputer.

          The 'hum' column is imputed with the mean value.
          The 'season' column is imputed with the mean value.
          """
          _SimpleImputer:
            - target: hum
              config:
                strategy: "mean"
            - target: season
              config:
                strategy: "mean"

  """Fifth step of the regression environment."""
  05_Baseline_Regression_Model:
    """Name of the module that contains the class and the function that should be executed."""
    model_optimization:
      """Name of the class that should be executed."""
      ModelOptimization:
        """Configuration of the pipeline."""
        pipeline:
          """
          Name of the functions that should be executed.
          
          The 'train_test_split' function is used to split the data into a training and a test set.
          The 'linear_regression' function is used to execute the linear regression model.
          The 'validation' function is used to validate the model.
          """
          train_test_split: true
          linear_regression: true
          validation: true